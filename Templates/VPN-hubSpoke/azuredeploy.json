{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.1",
    "parameters": {
      "vpnConfig": {
        "type": "array",
        "metadata": {
          "description": "Route based or policy based, RouteBased == IKEv2"
        },
        "defaultValue": [
          {
            "vpnType": "RouteBased",
            "gatewayName": "S2SGW",
            "gatewaySku": "Basic"
          }
        ]
      },
      "localGatewayName": {
        "type": "string",
        "defaultValue": "localGateway",
        "metadata": {
          "description": "Name for gateway resource representing "
        }
      },
      "localGatewayIpAddress": {
        "type": "string",
        "metadata": {
          "description": "Public IP of your onprem VPN gateway"
        }
      },
      "localAddressPrefix": {
        "type": "array",
        "metadata": {
          "description": "CIDR block representing the address space of the OnPremise VPN network's Subnet"
        }
      },  
      "connectionName": {
        "type": "string",
        "defaultValue": "s2sToOnPrem",
        "metadata": {
          "description": "Arbitrary name for the new connection between Azure VNet and other network"
        }
      },
      "sharedKey": {
        "type": "securestring",
        "metadata": {
          "description": "Shared key (PSK) for IPSec tunnel"
        }
      },
      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "core-transit",
        "metadata": {
          "description": "Arbitrary name for the Azure Virtual Network"
        }
      },
      "azureVNetAddressPrefix": {
        "type": "string",
        "defaultValue": "10.3.0.0/16",
        "metadata": {
          "description": "CIDR block representing the address space of the Azure VNet"
        }
      },      
      "subnetsList": {
        "type": "array",
        "metadata": {
          "description": "List of subnet names"
        },        
        "defaultValue": [
          {
            "name": "CoreServices",
            "addressPrefix": "10.3.1.0/24",
            "nsg": "true"
          },
          {
            "name": "SharedServices",
            "addressPrefix": "10.3.2.0/24",
            "nsg": "true"
          },          
          {
            "name": "DirectoryServices",
            "addressPrefix": "10.3.3.0/24",
            "nsg": "true"
          }        
        ]
      },
      "gatewaySubnet": {
        "type": "array",
        "defaultValue": [
          {
            "name": "GatewaySubnet",
            "addressPrefix": "10.3.250.0/28"
          }
        ]
      }
    },    
    "variables": {
      "gatewaySubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'),'GatewaySubnet')]",
      "coreNetNSGName": "[concat(parameters('virtualNetworkName'), '-NSG')]",
      "vpnGatewayPIPName": "[concat(parameters('vpnConfig')[0].gatewayName, '-PIP')]"
    },
    "resources": [
      {
        "apiVersion": "2018-08-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('coreNetNSGName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "rdpAllow",
              "properties": {
                "description": "Allow RDP from OnPrem",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "192.168.2.0/24",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            }
          ]
        }
      },      
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/localNetworkGateways",
        "name": "[parameters('localGatewayName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "localNetworkAddressSpace": {
            "addressPrefixes": "[parameters('localAddressPrefix')]"
          },
          "gatewayIpAddress": "[parameters('localGatewayIpAddress')]"
        }
      },
      {
        "apiVersion": "2015-06-15",
        "name": "[parameters('connectionName')]",
        "type": "Microsoft.Network/connections",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('vpnConfig')[0].gatewayName)]",
          "[concat('Microsoft.Network/localNetworkGateways/', parameters('localGatewayName'))]"
        ],
        "properties": {
          "virtualNetworkGateway1": {
            "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnConfig')[0].gatewayName)]"
          },
          "localNetworkGateway2": {
            "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName'))]"
          },
          "connectionType": "IPsec",
          "routingWeight": 10,
          "sharedKey": "[parameters('sharedKey')]"
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('virtualNetworkName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('coreNetNSGName'))]"
        ],        
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[parameters('azureVNetAddressPrefix')]"
            ]
          },
          "copy": [
            {
              "name": "subnets",
              "count": "[length(parameters('subnetsList'))]",
              "input": {
                "name": "[parameters('subnetsList')[copyIndex('subnets')].name]",
                "properties": {
                  "addressPrefix": "[parameters('subnetsList')[copyIndex('subnets')].addressPrefix]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-04-01",
        "type": "Microsoft.Network/virtualNetworks/subnets",
        "name": "[concat(parameters('virtualNetworkName'), '/', parameters('gatewaySubnet')[0].name)]",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressPrefix": "[parameters('gatewaySubnet')[0].addressPrefix]"
        },
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ]        
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('vpnGatewayPIPName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "apiVersion": "2019-04-01",
        "type": "Microsoft.Network/virtualNetworkGateways",
        "name": "[parameters('vpnConfig')[0].gatewayName]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('vpnGatewayPIPName'))]",
          "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('gatewaySubnetRef')]"
                },
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vpnGatewayPIPName'))]"
                }
              },
              "name": "vnetGatewayConfig"
            }
          ],
          "sku": {
            "name": "[parameters('vpnConfig')[0].gatewaySku]",
            "tier": "[parameters('vpnConfig')[0].gatewaySku]"
          },
          "gatewayType": "Vpn",
          "vpnType": "[parameters('vpnConfig')[0].vpnType]",
          "enableBgp": false
        }
      }
    ]
  }